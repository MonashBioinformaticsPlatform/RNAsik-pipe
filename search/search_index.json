{
    "docs": [
        {
            "location": "/", 
            "text": "RNAsik? yep!\n\n\nGetting help\n\n\nThere is an open \nRNAsik user's google group\n any can ask and answer\nquestions there. I will try my best to respond to any questions there, but bear in mind that I could get saturated with work\nand might not be able to respond straight away.\n\n\nAlso couple of house keeping thins:\n\n\n\n\nbe polite (in general) and considerate of others.\n\n\nInclude as much information about your problem as you can.\nThe problem needs to be reproducible, otherwise I might not be able to help you.\n\n\n\n\np.s any feedback and suggestions are also welcomed there\n\n\nBug reports\n\n\nBest place to submit bugs is with \nGitHub issues\n\nTry to include as much information as you can and again problem needs to be reproducible. Sometimes problem could be \nBigDataScript specific so also try looking at \nBigDataScrip user's group\n\n\nContributing\n\n\nThere are many places for contribution the most obvious ones are help with documentations, help in the \nuser's group\n\nand of course with the source itself.\n\n\nDocumentations\n\n\nI'm using \nmkdocs\n to generate this site, which has been very easy to use.\nAll documentations are written in plain markdown and located in main repo \ndocs/\n directory\n. You can simply fork \nRNAsik\n repository, do appropriate changes to the docs and send me a pull request (PR). Any small changes are super welcomed, even one letter spell correction (there'll be more than one), but all changes need to come through PR, which will not only acknowledge you as contributor, but also enable me to review changes quickly and incorporate them in (pull them in) easily.\n\n\nQuick notes on \nmkdocs\n, it is pretty easy to install with \npip\n in \nvirtualenv\n if you prefer (you should).\n\n\ngit clone https://github.com/MonashBioinformaticsPlatform/RNAsik-pipe\ncd RNAsik-pipe\nmkdocs serve\n\n\n\n\nThis will give you live updates to you copy of the docs, default URL should be \nlocalhost:8000\n, but it will tell you that once you've started the server. Then simply use your favourite text editor to edit markdown documents. Commit your changes, don't be afraid to be verbose, say what you've added/changed/removed in your commit message. And send me PR\n\n\nUser's group\n\n\nJust jump in and do it!\n\n\nDeveloping pipeline further\n\n\nI need to write a more comprehensive developer guide at sometime soon. Any contributions are again extremely welcomed and again as I've mentioned in the \ndocumentations\n section above, any contributions need to come through pull request (PR). \n\n\nTo summarise briefly layouts of the \nsrc/\n:\n\n\n\n\nRNAsik.bds\n is main \"executable\" file that sources and runs the pipeline. \n\n\nsikHeader.bds\n defines help menu and all user inputs options. I do have a couple of command line \narguments hidden from main help menu, but if you take a pick at this file you'll see them all\n\n\nAll other \n*.bds\n files contain functions to specific tasks those functions get called in \nRNAsik.bds\n\n\n\n\n\n\nTweet to @kizza_a\n \n\n\n\n\n\n\nShare", 
            "title": "Home"
        }, 
        {
            "location": "/#rnasik-yep", 
            "text": "", 
            "title": "RNAsik? yep!"
        }, 
        {
            "location": "/#getting-help", 
            "text": "There is an open  RNAsik user's google group  any can ask and answer\nquestions there. I will try my best to respond to any questions there, but bear in mind that I could get saturated with work\nand might not be able to respond straight away.  Also couple of house keeping thins:   be polite (in general) and considerate of others.  Include as much information about your problem as you can.\nThe problem needs to be reproducible, otherwise I might not be able to help you.   p.s any feedback and suggestions are also welcomed there", 
            "title": "Getting help"
        }, 
        {
            "location": "/#bug-reports", 
            "text": "Best place to submit bugs is with  GitHub issues \nTry to include as much information as you can and again problem needs to be reproducible. Sometimes problem could be \nBigDataScript specific so also try looking at  BigDataScrip user's group", 
            "title": "Bug reports"
        }, 
        {
            "location": "/#contributing", 
            "text": "There are many places for contribution the most obvious ones are help with documentations, help in the  user's group \nand of course with the source itself.", 
            "title": "Contributing"
        }, 
        {
            "location": "/#documentations", 
            "text": "I'm using  mkdocs  to generate this site, which has been very easy to use.\nAll documentations are written in plain markdown and located in main repo  docs/  directory . You can simply fork  RNAsik  repository, do appropriate changes to the docs and send me a pull request (PR). Any small changes are super welcomed, even one letter spell correction (there'll be more than one), but all changes need to come through PR, which will not only acknowledge you as contributor, but also enable me to review changes quickly and incorporate them in (pull them in) easily.  Quick notes on  mkdocs , it is pretty easy to install with  pip  in  virtualenv  if you prefer (you should).  git clone https://github.com/MonashBioinformaticsPlatform/RNAsik-pipe\ncd RNAsik-pipe\nmkdocs serve  This will give you live updates to you copy of the docs, default URL should be  localhost:8000 , but it will tell you that once you've started the server. Then simply use your favourite text editor to edit markdown documents. Commit your changes, don't be afraid to be verbose, say what you've added/changed/removed in your commit message. And send me PR", 
            "title": "Documentations"
        }, 
        {
            "location": "/#users-group", 
            "text": "Just jump in and do it!", 
            "title": "User's group"
        }, 
        {
            "location": "/#developing-pipeline-further", 
            "text": "I need to write a more comprehensive developer guide at sometime soon. Any contributions are again extremely welcomed and again as I've mentioned in the  documentations  section above, any contributions need to come through pull request (PR).   To summarise briefly layouts of the  src/ :   RNAsik.bds  is main \"executable\" file that sources and runs the pipeline.   sikHeader.bds  defines help menu and all user inputs options. I do have a couple of command line \narguments hidden from main help menu, but if you take a pick at this file you'll see them all  All other  *.bds  files contain functions to specific tasks those functions get called in  RNAsik.bds    Tweet to @kizza_a     \nShare", 
            "title": "Developing pipeline further"
        }, 
        {
            "location": "/docs/", 
            "text": "RNAsik pipeline docs\n\n\nQuick start\n\n\nAlign raw reads\n\n\nRNAsik -align star \\\n       -fastaRef /path/to/reference.fasta \\\n       -fqDir /path/to/raw-data/directory\n\n\n\n\nCount gene features\n\n\nRNAsik -counts \\\n       -gtfFile path/to/annotation.gtf\n\n\n\n\nThe lot\n\n\nRNAsik -fqDir /path/to/raw-data/directory \\\n       -align star \\\n       -refFiles /path/to/refDir \\\n       -counts \\\n       -metrics \\\n       -threads 10\n\n\n\n\nTry it out\n\n\nRNAsik -align star \\\n       -fastaRef http://bioinformatics.erc.monash.edu/home/kirill/ref-files/Mus_musculus/Mus_musculus.GRCm38.dna_sm.primary_assembly.fa.gz \\\n       -fqDir http://bioinformatics.erc.monash.edu/home/kirill/RNAsikSampleData/rawData/Dicer-fl.fl-iCre75-RNAseq.tar \\\n       -counts \\\n       -gtfFile http://bioinformatics.erc.monash.edu/home/kirill/ref-files/Mus_musculus/Mus_musculus.GRCm38.84.gtf.gz \\\n       -metrics \\\n       -threads 10\n\n\n\n\nThis publicly available data from \nNCBI\n. \n\n\nIntroduction\n\n\nRNAsik\n does alignment AND read counting, which makes \nDegust\n analysis one upload away AND BAM file pre-processed for IGV AND diagnostic QC metrics. \nRNAsik\n wraps \nthese tools\n making your RNAseq analysis more streamline. \nRNAsik\n has also \"sanity checks\" inbuilt, checking command line options, checking if options are valid files/directories and it will talk to you so don't sweat :) but do read the error messages.\n\n\nPrerequisites\n\n\n\n\nBigDataScript\n\n\nSTAR aligner\n\n\nsubread\n\n\nsamtools\n\n\nbedtools2\n\n\nPicard tools\n\n\nQualiMap\n\n\nMultiQC\n \n\n\nFastQC\n\n\n\n\nInstallation\n\n\nPreferred method\n\n\nFollow \nansible installation guid\n to get ansible then:\n\n\ngit clone https://github.com/MonashBioinformaticsPlatform/bio-ansible\ncd bio-ansible/\nansible-playbook -i host bio.yml --tags bds,rnasik,star,subread,samtools,htslib,bedtools,picard,qualimap,fastqc,multiqc\n\n\n\n\nNeed more help?\n\n\nAlternative method\n\n\nIf you have all of the tools installed and you just need \nRNAsik\n you can simply \ngit clone\n it. It doesn't require any\nother installations/compilations. BUT you do need to have \nBigDataScript\n installed\nand in your \nPATH\n for \nRNAsik\n to run\n\n\ngit clone https://github.com/MonashBioinformaticsPlatform/RNAsik-pipe\npath/to/RNAsik-pipe/bin/RNAsik\n\n\n\n\nUser input\n\n\nReference files\n\n\n\n\nInput File\nDescription\n\n\nFASTA file\nMost often this is your genomic reference sequence. It is a FASTA file holding raw DNA sequences where different features e.g chromosomes are labeled uniquely with a header line starting with '>'. [FASTA Format Description](https://en.wikipedia.org/wiki/FASTA_format) \n\n\nGTF/GFF/SAF file\n This is your gene annotation file (i.e coordinates of your genes, exons and other genomic features). This should be linked and associated with your genomic reference file. SAF (simple annotation format) is something that featureCounts use and it supported by the pipeline\n\n\n\n\n\n\n\nIt is highly recommended that both of those files come from the same distributor. Most common distributors are \nEnsembl\n, \nUCSC\n and \nNCBI\n.\n\n\n\n\nRaw data\n\n\n\n\nInput File\nDescription\n\n\nFASTQ file\nThese are your raw files that are provided by the sequencing facility to you, they can be gzipped (.fq, .fastq, .fq.gz, .fastq.gz) \n\n\n\n\n\n\n\nRNAsik\n can handle nested directories as long as your data is homogeneous i.e all data belongs to the same library type e.g paired-end(if paired end, RNASik looks for 'R1' and 'R2' in the filenames to distinguish read pairs. \n\n\n\n\nRNASik Output files and directories\n\n\nDescription of output directories\n\n\n\n\nDirectories\nDescription\n\n\nrefFiles/\n Contains the reference files (FASTA and GTF) and indices (aligner index) used in the analysis run \n\n\nbamFiles/\n Contains \"raw\" BAM files, outputed from an aligner. Also may hold additional files from alignment run e.g aligner specific log files \n\n\ncountFiles/\n Contains read count files, \"raw\" - from `featureCounts`, degust ready counts and filtered for protein_coding features only\n\n\nmarkedBams/\n Contains pre-processed BAM files, these BAMs are sorted, reordered and duplicates marked as well as indexed, all using picard tools. These BAMs can be used in [IGV](http://software.broadinstitute.org/software/igv/) to view read alignments \n\n\nfastqReport/\n Contains FastQC HTML reports for individual FASTQ files\n\n\nqualiMapResults/\n Contains int(ra|er)genic rates from each BAM file. Each BAM has its own directory with metric files. These results generated using `QualiMap rnaseq` command\n\n\nfastqDir/\n If you are going to pull your FASTQ file over http in tarball, then tarball will be unarchived here\n\n\nmultiqc_data/\nDirectory created by MultiQC holding a parsed text file, it doesn't serve any purpose for html file\n\n\nlogs\nDirectory that holds subdirectories, self explanatory, with logs files\n\n\n\n\n\nDescription of output files\n\n\n\n\nFiles\nDescription\n\n\ngeneIds.txt\n Three additonal columns for read counts. Gene Id, Gene Name, Gene Biotype. Count files with \"-withNames\" postfix have those columns included \n\n\nstrandInfo.txt\n Contains guesses, based on `featureCounts` `.summary` files, strand informataion\n\n\nmultiqc_report.html\nThis is the report file produced by MultiQC tool. A stand alone html file and can be viewed in any browser\n\n\n\n\n\nCommand line options\n\n\nRead alignment\n\n\n\n\nOptions\nUsage\n\n\n-align\nspecify your aligner of choice [star|starWithAnn|hisat|bwa]\n\n\n-fqDir\nspecify path to your raw data directory. `RNAsik` will search that path recursively, so don't worry about nested directores\n\n\n-fastaRef\nspecify path to your reference FASTA file, i.e file that holds your refrence genome\n\n\n-paired\nspecify if data is paired end (RNASik looks for R1 and R2 in the FASTQ filename representing Read 1 and Read 2 \n\n\n\n\n\nRead counting\n\n\n\n\nOptions\n Usage \n\n\n-counts\n \n flag if you'd like to get read counts\n\n\n-gtfFile\n \n specify path to your reference annotation file [GTF|GFF|SAF]\n\n\n\n\n\nReads metrics\n\n\n\n\nOptions\n Usage \n\n\n-metrics\n \n This is an aggregate flag that is a short hand of writing out -prePro, -fastqc, -exonicRate and -multiqc\n\n\n-fastqc\n \n flag if you'd like to get FastQC reports for your fastq files\n\n\n-exonicRate\n \n flag if you'd like to get Int(ra|er)genic rates for your reads, using QualiMap tool\n\n\n-multiqc\n \n flag if you'd like to get general report that summarises different log files including `STAR`, `featureCounts`, `FastQC` and `QualiMap`\n\n\n\n\n\nExtra options\n\n\n\n\nOptions\n Usage \n\n\n-prePro\n \n flag to get your BAM files pre-processed i.e get them sorted, duplicates marked and index\n\n\n-samplesSheet\n \n specify name of a tab separated text file, two columns,the first with old prefixes to be removed by new prefixes in the second column\n\n\n-genomeIdx\n \n specify path to pre-existing alignment index \n\n\n-outDir\ngive a name to your analysis output directory [sikRun] \n\n\n-extn\n \n provide your fastq files extntion. [\".fastq.gz\"]  \n\n\n-pairIds\n \n provide type identification, default is [`_R1,_R2`]\n\n\n-threads\n \n provide number of threads to use. [4]  \n\n\n-memory\n \n provide amount of memory to use. [40000000000]  \n\n\n-extraOpts\n \n provide key=value pairs, one per line, with key being tool name and value is a string of options e.g `star=\"--outWigType bedGraph\"` \n\n\n-configFile\nspecify your own config file with key=value pairs, one per line, for all tools\n\n\n\n\n\nUnusual user case\n\n\n\n\n-bamsDir\n \n specify path to BAMs directory. Use if bams were generated outside of the pipeline \n\n\n\n\n\nTweet to @kizza_a\n \n\n\n\n\n\n\nShare", 
            "title": "Docs"
        }, 
        {
            "location": "/docs/#rnasik-pipeline-docs", 
            "text": "", 
            "title": "RNAsik pipeline docs"
        }, 
        {
            "location": "/docs/#quick-start", 
            "text": "", 
            "title": "Quick start"
        }, 
        {
            "location": "/docs/#align-raw-reads", 
            "text": "RNAsik -align star \\\n       -fastaRef /path/to/reference.fasta \\\n       -fqDir /path/to/raw-data/directory", 
            "title": "Align raw reads"
        }, 
        {
            "location": "/docs/#count-gene-features", 
            "text": "RNAsik -counts \\\n       -gtfFile path/to/annotation.gtf", 
            "title": "Count gene features"
        }, 
        {
            "location": "/docs/#the-lot", 
            "text": "RNAsik -fqDir /path/to/raw-data/directory \\\n       -align star \\\n       -refFiles /path/to/refDir \\\n       -counts \\\n       -metrics \\\n       -threads 10", 
            "title": "The lot"
        }, 
        {
            "location": "/docs/#try-it-out", 
            "text": "RNAsik -align star \\\n       -fastaRef http://bioinformatics.erc.monash.edu/home/kirill/ref-files/Mus_musculus/Mus_musculus.GRCm38.dna_sm.primary_assembly.fa.gz \\\n       -fqDir http://bioinformatics.erc.monash.edu/home/kirill/RNAsikSampleData/rawData/Dicer-fl.fl-iCre75-RNAseq.tar \\\n       -counts \\\n       -gtfFile http://bioinformatics.erc.monash.edu/home/kirill/ref-files/Mus_musculus/Mus_musculus.GRCm38.84.gtf.gz \\\n       -metrics \\\n       -threads 10  This publicly available data from  NCBI .", 
            "title": "Try it out"
        }, 
        {
            "location": "/docs/#introduction", 
            "text": "RNAsik  does alignment AND read counting, which makes  Degust  analysis one upload away AND BAM file pre-processed for IGV AND diagnostic QC metrics.  RNAsik  wraps  these tools  making your RNAseq analysis more streamline.  RNAsik  has also \"sanity checks\" inbuilt, checking command line options, checking if options are valid files/directories and it will talk to you so don't sweat :) but do read the error messages.", 
            "title": "Introduction"
        }, 
        {
            "location": "/docs/#prerequisites", 
            "text": "BigDataScript  STAR aligner  subread  samtools  bedtools2  Picard tools  QualiMap  MultiQC    FastQC", 
            "title": "Prerequisites"
        }, 
        {
            "location": "/docs/#installation", 
            "text": "", 
            "title": "Installation"
        }, 
        {
            "location": "/docs/#preferred-method", 
            "text": "Follow  ansible installation guid  to get ansible then:  git clone https://github.com/MonashBioinformaticsPlatform/bio-ansible\ncd bio-ansible/\nansible-playbook -i host bio.yml --tags bds,rnasik,star,subread,samtools,htslib,bedtools,picard,qualimap,fastqc,multiqc  Need more help?", 
            "title": "Preferred method"
        }, 
        {
            "location": "/docs/#alternative-method", 
            "text": "If you have all of the tools installed and you just need  RNAsik  you can simply  git clone  it. It doesn't require any\nother installations/compilations. BUT you do need to have  BigDataScript  installed\nand in your  PATH  for  RNAsik  to run  git clone https://github.com/MonashBioinformaticsPlatform/RNAsik-pipe\npath/to/RNAsik-pipe/bin/RNAsik", 
            "title": "Alternative method"
        }, 
        {
            "location": "/docs/#user-input", 
            "text": "", 
            "title": "User input"
        }, 
        {
            "location": "/docs/#reference-files", 
            "text": "Input File Description  FASTA file Most often this is your genomic reference sequence. It is a FASTA file holding raw DNA sequences where different features e.g chromosomes are labeled uniquely with a header line starting with '>'. [FASTA Format Description](https://en.wikipedia.org/wiki/FASTA_format)   GTF/GFF/SAF file  This is your gene annotation file (i.e coordinates of your genes, exons and other genomic features). This should be linked and associated with your genomic reference file. SAF (simple annotation format) is something that featureCounts use and it supported by the pipeline    It is highly recommended that both of those files come from the same distributor. Most common distributors are  Ensembl ,  UCSC  and  NCBI .", 
            "title": "Reference files"
        }, 
        {
            "location": "/docs/#raw-data", 
            "text": "Input File Description  FASTQ file These are your raw files that are provided by the sequencing facility to you, they can be gzipped (.fq, .fastq, .fq.gz, .fastq.gz)     RNAsik  can handle nested directories as long as your data is homogeneous i.e all data belongs to the same library type e.g paired-end(if paired end, RNASik looks for 'R1' and 'R2' in the filenames to distinguish read pairs.", 
            "title": "Raw data"
        }, 
        {
            "location": "/docs/#rnasik-output-files-and-directories", 
            "text": "", 
            "title": "RNASik Output files and directories"
        }, 
        {
            "location": "/docs/#description-of-output-directories", 
            "text": "Directories Description  refFiles/  Contains the reference files (FASTA and GTF) and indices (aligner index) used in the analysis run   bamFiles/  Contains \"raw\" BAM files, outputed from an aligner. Also may hold additional files from alignment run e.g aligner specific log files   countFiles/  Contains read count files, \"raw\" - from `featureCounts`, degust ready counts and filtered for protein_coding features only  markedBams/  Contains pre-processed BAM files, these BAMs are sorted, reordered and duplicates marked as well as indexed, all using picard tools. These BAMs can be used in [IGV](http://software.broadinstitute.org/software/igv/) to view read alignments   fastqReport/  Contains FastQC HTML reports for individual FASTQ files  qualiMapResults/  Contains int(ra|er)genic rates from each BAM file. Each BAM has its own directory with metric files. These results generated using `QualiMap rnaseq` command  fastqDir/  If you are going to pull your FASTQ file over http in tarball, then tarball will be unarchived here  multiqc_data/ Directory created by MultiQC holding a parsed text file, it doesn't serve any purpose for html file  logs Directory that holds subdirectories, self explanatory, with logs files", 
            "title": "Description of output directories"
        }, 
        {
            "location": "/docs/#description-of-output-files", 
            "text": "Files Description  geneIds.txt  Three additonal columns for read counts. Gene Id, Gene Name, Gene Biotype. Count files with \"-withNames\" postfix have those columns included   strandInfo.txt  Contains guesses, based on `featureCounts` `.summary` files, strand informataion  multiqc_report.html This is the report file produced by MultiQC tool. A stand alone html file and can be viewed in any browser", 
            "title": "Description of output files"
        }, 
        {
            "location": "/docs/#command-line-options", 
            "text": "", 
            "title": "Command line options"
        }, 
        {
            "location": "/docs/#read-alignment", 
            "text": "Options Usage  -align specify your aligner of choice [star|starWithAnn|hisat|bwa]  -fqDir specify path to your raw data directory. `RNAsik` will search that path recursively, so don't worry about nested directores  -fastaRef specify path to your reference FASTA file, i.e file that holds your refrence genome  -paired specify if data is paired end (RNASik looks for R1 and R2 in the FASTQ filename representing Read 1 and Read 2", 
            "title": "Read alignment"
        }, 
        {
            "location": "/docs/#read-counting", 
            "text": "Options  Usage   -counts    flag if you'd like to get read counts  -gtfFile    specify path to your reference annotation file [GTF|GFF|SAF]", 
            "title": "Read counting"
        }, 
        {
            "location": "/docs/#reads-metrics", 
            "text": "Options  Usage   -metrics    This is an aggregate flag that is a short hand of writing out -prePro, -fastqc, -exonicRate and -multiqc  -fastqc    flag if you'd like to get FastQC reports for your fastq files  -exonicRate    flag if you'd like to get Int(ra|er)genic rates for your reads, using QualiMap tool  -multiqc    flag if you'd like to get general report that summarises different log files including `STAR`, `featureCounts`, `FastQC` and `QualiMap`", 
            "title": "Reads metrics"
        }, 
        {
            "location": "/docs/#extra-options", 
            "text": "Options  Usage   -prePro    flag to get your BAM files pre-processed i.e get them sorted, duplicates marked and index  -samplesSheet    specify name of a tab separated text file, two columns,the first with old prefixes to be removed by new prefixes in the second column  -genomeIdx    specify path to pre-existing alignment index   -outDir give a name to your analysis output directory [sikRun]   -extn    provide your fastq files extntion. [\".fastq.gz\"]    -pairIds    provide type identification, default is [`_R1,_R2`]  -threads    provide number of threads to use. [4]    -memory    provide amount of memory to use. [40000000000]    -extraOpts    provide key=value pairs, one per line, with key being tool name and value is a string of options e.g `star=\"--outWigType bedGraph\"`   -configFile specify your own config file with key=value pairs, one per line, for all tools", 
            "title": "Extra options"
        }, 
        {
            "location": "/docs/#unusual-user-case", 
            "text": "-bamsDir    specify path to BAMs directory. Use if bams were generated outside of the pipeline    Tweet to @kizza_a     \nShare", 
            "title": "Unusual user case"
        }, 
        {
            "location": "/about/", 
            "text": "RNAsik for RNAseq\n\n\n\n\nN.B\n This workflow assumes model organism has a reference genome. If the reference genome isn't applicable, different workflow is required.\n\n\n\n\nIntroduction\n\n\nRNAsik\n pipeline was build in house for processing \nRNA-seq(uencing)\n data.\nIt is written in \nBigDataScript (bds)\n, which is \ndomain specific language (DSL)\n, that makes writing pipelines easy as well as making them robust. To get a bit more technical bds runs on \njava virtual machine (JVM)\n and therefore requires \nJava\n. In simple terms any pipeline is a wrapper of several tools that makes it easier and arguably faster to get to the end goal. The three core parts to any \nRNA-seq analysis\n are: \n\n\n\n\nmapping to the reference genome\n\n\ncounting reads mapped into features e.g genes\n\n\ndoing differential expression (DE) statistics\n\n\n\n\nThe pipeline does the first two parts and \nDegust\n does the third part. Degust itself, in simple terms, a wrapper around \nlimma\n and \nedgeR\n R packages. In theory and practice one can take output from \nRNAsik\n pipeline, which is a table of counts where every gene is a row and every column is a sample and use those or other R packages to do your own DE analysis.\n\n\nIn actual terms both \nRNAsik\n and \nDegust\n provide much more than just those few simple steps and both tools are very powerful for RNA-seq analysis. \nDegust\n is exceptionally good for exploratory data visualisation and analysis. Both tools can also server as a nice proxy for learning bioinformatics as they provide command line and R code for doing the analysis.\n\n\nRNAsik pipeline\n\n\nAs mentioned above very first step in \nRNA-seq analysis\n is to map your raw reads (\nFASTQ\n) to the reference genome following by counting of reads that map onto a feature. But there is always more you could do with your data, in fact almost always only by doing more you can get deeper inside into your biological experiment and the system you are studying. And so \nRNAsik\n uses these tools to get as much out of your data as possible in an streamline run:\n\n\n\n\nSTAR aligner for mapping\n\n\nfeatureCounts from subread package for read counting\n\n\nsamtools for coverage calculation and general bam files filtering\n\n\npicard tools also for general bam fiels filtering\n\n\nQualiMap for intragenic and interegenic rates\n\n\nFastQC for QC metrics on yor fastq files\n\n\nMultiQC for wraping everying into nice, single page report\n \n\n\n\n\nAs one can imagine every one of those tools has several number of options and by running \nRNAsik-pipeline\n you get predefined - subjective run. Obviously it all comes from years of experience and continues development and improvement. Use can always pass his/her own options through \n-extraOptions\n flag for more fine turning. \nAlternatively as, hinted above, user can leverage of \nRNAsik\n to run everything separately with fine control over the individual run. \nRNAsik\n produces \n.html report\n with all commands options specified.\n\n\nQuality metrics\n\n\nMultiQC\n is an aggregate tool that pulls different metrics into one place - multiqc report. This is a good place to start understanding your data. The central bits of information are:\n\n\n\n\nAre there differences in library sizes?\n\n\nIs there any issues with mapping rates?\n\n\nIs there any issues with reads assignment rates?\n\n\n\n\nHowever there is so many other questions you can ask including:\n\n\n\n\nWhat is duplication rate?\n\n\nWhat is multi-mapping rate?\n\n\nWhat is intragenic and interagenic rates?\n\n\n\n\nAs mentioned above \nmultiqc\n report is a great first step in the attempt to answer those questions. A lot of the time everything looks fairly good and consistent allowing downstream analysis. Sometimes user can tweak certain individual parameters which can improve results, other times it comes down to experimental design and/or library preparation and sequencing issues. Either way one need to make this \"first iteration\" in order to see room for improvement. \n\n\nTweet to @kizza_a\n \n\n\n\n\n\n\nShare", 
            "title": "About"
        }, 
        {
            "location": "/about/#rnasik-for-rnaseq", 
            "text": "N.B  This workflow assumes model organism has a reference genome. If the reference genome isn't applicable, different workflow is required.", 
            "title": "RNAsik for RNAseq"
        }, 
        {
            "location": "/about/#introduction", 
            "text": "RNAsik  pipeline was build in house for processing  RNA-seq(uencing)  data.\nIt is written in  BigDataScript (bds) , which is  domain specific language (DSL) , that makes writing pipelines easy as well as making them robust. To get a bit more technical bds runs on  java virtual machine (JVM)  and therefore requires  Java . In simple terms any pipeline is a wrapper of several tools that makes it easier and arguably faster to get to the end goal. The three core parts to any  RNA-seq analysis  are:    mapping to the reference genome  counting reads mapped into features e.g genes  doing differential expression (DE) statistics   The pipeline does the first two parts and  Degust  does the third part. Degust itself, in simple terms, a wrapper around  limma  and  edgeR  R packages. In theory and practice one can take output from  RNAsik  pipeline, which is a table of counts where every gene is a row and every column is a sample and use those or other R packages to do your own DE analysis.  In actual terms both  RNAsik  and  Degust  provide much more than just those few simple steps and both tools are very powerful for RNA-seq analysis.  Degust  is exceptionally good for exploratory data visualisation and analysis. Both tools can also server as a nice proxy for learning bioinformatics as they provide command line and R code for doing the analysis.", 
            "title": "Introduction"
        }, 
        {
            "location": "/about/#rnasik-pipeline", 
            "text": "As mentioned above very first step in  RNA-seq analysis  is to map your raw reads ( FASTQ ) to the reference genome following by counting of reads that map onto a feature. But there is always more you could do with your data, in fact almost always only by doing more you can get deeper inside into your biological experiment and the system you are studying. And so  RNAsik  uses these tools to get as much out of your data as possible in an streamline run:   STAR aligner for mapping  featureCounts from subread package for read counting  samtools for coverage calculation and general bam files filtering  picard tools also for general bam fiels filtering  QualiMap for intragenic and interegenic rates  FastQC for QC metrics on yor fastq files  MultiQC for wraping everying into nice, single page report     As one can imagine every one of those tools has several number of options and by running  RNAsik-pipeline  you get predefined - subjective run. Obviously it all comes from years of experience and continues development and improvement. Use can always pass his/her own options through  -extraOptions  flag for more fine turning. \nAlternatively as, hinted above, user can leverage of  RNAsik  to run everything separately with fine control over the individual run.  RNAsik  produces  .html report  with all commands options specified.", 
            "title": "RNAsik pipeline"
        }, 
        {
            "location": "/about/#quality-metrics", 
            "text": "MultiQC  is an aggregate tool that pulls different metrics into one place - multiqc report. This is a good place to start understanding your data. The central bits of information are:   Are there differences in library sizes?  Is there any issues with mapping rates?  Is there any issues with reads assignment rates?   However there is so many other questions you can ask including:   What is duplication rate?  What is multi-mapping rate?  What is intragenic and interagenic rates?   As mentioned above  multiqc  report is a great first step in the attempt to answer those questions. A lot of the time everything looks fairly good and consistent allowing downstream analysis. Sometimes user can tweak certain individual parameters which can improve results, other times it comes down to experimental design and/or library preparation and sequencing issues. Either way one need to make this \"first iteration\" in order to see room for improvement.   Tweet to @kizza_a     \nShare", 
            "title": "Quality metrics"
        }, 
        {
            "location": "/changelog/", 
            "text": "New in version 1.4.6\n\n\n\n\ngeneralised aligner's call, this will make it easier to add new aligners into RNAsik\n\n\nincluded support for \nhista2\naligner\n\n\nadded samplesSheep logging\n\n\nfixed few minor bugs and improved code quality\n\n\nadded \ncanFail\n option to several non crucial tasks, allowing pipeline to continue if some task failed of fastqc and qualimap to allow them to fail as those are non essential tasks.\n\n\n\n\nNew in version 1.4.7\n\n\n\n\nfixed STAR memory allocation issue, now user can run with fewer cpus without a worry for STAR spawning multiple tasks causing out of memory issue.\n\n\nmade BASH wrapper (not ideal) for \nRNAsik\n this is capture \nbds\n logs including report.html which is rather valuable piece of information about the run\n\n\nintroduced another new aligner - \nbwa mem\n to do bacterial RNAseq.\n\n\nintroduced multiqc config file in \nconfigs\n directory now\n\n\ncompletely removed \n-fqRegex\n and added sanity check for paired end data. If R2 is found and -paired isn't set or vice verse then error message sent\n\n\nseveral general bug fixes\n\n\nsimplified help menu\n\n\n\n\nNew in version 1.4.8\n\n\n\n\nadded new feature: coverage plots generation\n\n\nadded new feature: ability to pass previously generated references directory, saves spaces and time\n\n\nfixed strand guessing script, should be better at guessing now\n\n\nmoved to \nmkdocs\n for documents compilation and deployment to gh_pages\n\n\nadded new python script to make degust file, this simplifies and strengthens the code\n\n\nimproved readability of the code\n\n\nimproved and fixed bugs in handling fastq files and assignment of fastq to sample names\n\n\n\n\nTweet to @kizza_a\n \n\n\n\n\n\n\nShare", 
            "title": "Changelog"
        }, 
        {
            "location": "/changelog/#new-in-version-146", 
            "text": "generalised aligner's call, this will make it easier to add new aligners into RNAsik  included support for  hista2 aligner  added samplesSheep logging  fixed few minor bugs and improved code quality  added  canFail  option to several non crucial tasks, allowing pipeline to continue if some task failed of fastqc and qualimap to allow them to fail as those are non essential tasks.", 
            "title": "New in version 1.4.6"
        }, 
        {
            "location": "/changelog/#new-in-version-147", 
            "text": "fixed STAR memory allocation issue, now user can run with fewer cpus without a worry for STAR spawning multiple tasks causing out of memory issue.  made BASH wrapper (not ideal) for  RNAsik  this is capture  bds  logs including report.html which is rather valuable piece of information about the run  introduced another new aligner -  bwa mem  to do bacterial RNAseq.  introduced multiqc config file in  configs  directory now  completely removed  -fqRegex  and added sanity check for paired end data. If R2 is found and -paired isn't set or vice verse then error message sent  several general bug fixes  simplified help menu", 
            "title": "New in version 1.4.7"
        }, 
        {
            "location": "/changelog/#new-in-version-148", 
            "text": "added new feature: coverage plots generation  added new feature: ability to pass previously generated references directory, saves spaces and time  fixed strand guessing script, should be better at guessing now  moved to  mkdocs  for documents compilation and deployment to gh_pages  added new python script to make degust file, this simplifies and strengthens the code  improved readability of the code  improved and fixed bugs in handling fastq files and assignment of fastq to sample names   Tweet to @kizza_a     \nShare", 
            "title": "New in version 1.4.8"
        }
    ]
}