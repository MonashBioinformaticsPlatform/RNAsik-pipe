#----------------------------------------
# Counts
#----------------------------------------

include "sikHeader.bds"
include "sikSanityCheck.bds"

#------------------------------
# Make directories as required
#------------------------------

#------
# Body
#------
string[] getReadsCount(string[] bamsList, string gtfFile, bool checkPair) {

    string additionalArgs
    if(checkPair) additionalArgs = "-p"
    else additionalArgs = ""

    string bamString = bamsList.join(" ")

    string featureReverse = "featureReverse.txt"
    task(featureReverse <- bamFiles, taskName := "counting reads") {
        sys featureCounts -a $gtfFile \
                          -o $featureReverse \
                          -s 2 \
                          -T $threads \
                          $additionalArgs \
                          $bamString
    }
    string featureNo = "featureNo.txt"
    task(featureNo <- bamFiles, taskName := "counting reads") {
        sys featureCounts -a $gtfFile \
                          -o $featureNo \
                          -s 0 \
                          -T $threads \
                          $additionalArgs \
                          $bamString
    }
    return [featureNo, featureReverse] 
}

string getGeneIds(){
    string getProgPath = programPath.pathName()

    string makeDB = getProgPath+"/../scripts/make-gtf-db.py" 
    string dbName = gtfFile.baseName().removeExt()+'.db'
    task(dbName <- gtfFile, taskName := "Making db file"){
        sys python $makeDB $gtfFile $dbName
    }

    string getGeneIds = getProgPath+"/../scripts/getGeneIds.py"
    string geneIds = "geneIds.txt"
    task(geneIds <- dbName, taskName := "getting geneIds.txt file") {
        sys python $getGeneIds --dbFile $dbName > $geneIds
    }

    return geneIds
}
