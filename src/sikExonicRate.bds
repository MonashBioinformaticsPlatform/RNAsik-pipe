#--------------------------------------------------
# Functions to pre-process BAM files - picard
#--------------------------------------------------

string[] getExonicRates(string{} cmdExe, string sikDir, string{} bamsMap, string exonicOpts, string strandInfo, string gtfFile) {
    string[] qualiResults
    // check if executable is there
    if(!cmdExe.hasKey("qualimapExe")) error "Can't get qualiMap executable, check your config file $configFile"
    string qualimapExe = cmdExe{"qualimapExe"}
    // map to get qualiMap string 
    string{} strandMap = {"NonStrandedCounts" => "non-strand-specific", \
                          "ForwardStrandedCounts" => "strand-specific-forward", \
                          "ReverseStrandedCounts" => "strand-specific-reverse" }
    // if strandInfo comes from the user cmd input it'll be a string otherwise it'll be a file
    string strandType
    string strandValue
    string strandExitCode
    if(strandInfo.isFile()) {
        (strandType, strandValue, strandExitCode) = strandInfo.read().split(",")

        if(!strandMap.hasKey(strandType)) {
            error "Something went wrong, this error should occur. Error is from sikExonicRate.bds"
        }
        else {
            //strandMap{strandType} strandType = strandMap{strandType}
            strandType = strandMap{strandType}
        }
    }
    else {
        strandType = strandInfo
    }

    for(string bamKey : bamsMap.keys()) {

        string bamFile = bamsMap{bamKey}
        string baseDir = sikDir+"/"+"qualiMapResults"+"/"+bamKey
        string depFile = baseDir+"/"+"rnaseq_qc_results.txt"
        string countsFile = baseDir+"/"+bamKey+"_counts.txt"

        dep(exonicRate, depFile <- [bamFile, gtfFile, strandInfo], canFail := true, cpus := 2, taskName := "getting Int(ra|er)genic rates for"+bamFile) {
            sys unset DISPLAY
            sys $qualimapExe rnaseq -bam $bamFile \
                                    -outdir $baseDir \
                                    $exonicOpts \
                                    -oc $countsFile \
                                    --sequencing-protocol $strandType \
                                    --java-mem-size=6G
        }
        qualiResults.add(depFile)
    }
    goal qualiResults
    return qualiResults
}
