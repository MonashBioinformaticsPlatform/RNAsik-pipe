//NOTE made new flag -cov, undocumented at this stage
// it gets sets by -prePro in sanit check
// this is mainly for senarios when user manually passes in marked bam files with -proBams and then he/she can flag -cov
string[] getCovFiles(string{} cmdExe, string{} sortedBamsMap, string sikDir, string fastaRef, string chromSizes) {

    string coverageFilesDir = sikDir+"/"+"coverageFiles"
    if((!coverageFilesDir.exists()) && (cov)) {
        coverageFilesDir.mkdir()
    }

    string{} resource = getResource(cmdExe, "bedtools", "")
    string bedtoolsExe = resource{"toolsExe"}
    int covMem = resource{"toolsMem"}.parseInt()
    int covCpu = resource{"toolsCpu"}.parseInt()

    string sortMem = covMem+"K"

    string bedGraphToBigWig = programPath.pathName()+"/../scripts/ucsc_bin/bedGraphToBigWig"

    string[] bigWigFiles

    for(string bamKey : sortedBamsMap.keys()) {

	string bamFile = sortedBamsMap{bamKey}

        if(bamFile.lastIndexOf("_sorted") < 0) {
            warning "You might be passing unsorted BAM file, $bamFile. Ignore the the warning if you are sure that BAM files are sorted"
        }

        string[] strnds = ["", "-strand -", "-strand +"]
        string[] suffix = ["_nonStranded", "_reverseStranded", "_forwardStranded"]

        for(int i : range(0, 2)) {

            string bedGraphFile = coverageFilesDir+"/"+bamKey+suffix[i]+".bedGraph"
            string tmpBedGraph = bedGraphFile + ".tmp"
            string bigWigFile = bedGraphFile.swapExt(".bedGraph", ".bw")
            string strnd = strnds[i]

            dep(cov, bigWigFile <- [bamFile, chromSizes, fastaRef], cpus := covCpu, mem := covMem, canFail := true, taskName := "Getting coverage files, bigWig for strand $strnd for $bamFile") {
                sys $bedtoolsExe genomecov -bga \
                                           -split \
                                           $strnd \
                                           -ibam $bamFile \
                                           -g $fastaRef > $tmpBedGraph

                //sys LC_COLLATE=C sort --buffer-size=$sortMem \
                //                      -k1,1 \
                //                      -k2,2n $tmpBedGraph > $bedGraphFile

                sys bedSort $tmpBedGraph $bedGraphFile

                sys $bedGraphToBigWig $bedGraphFile $chromSizes $bigWigFile
                sys rm $bedGraphFile $tmpBedGraph
            }

            bigWigFiles.add(bigWigFile)

        }
    }
    goal bigWigFiles
    return bigWigFiles
}
