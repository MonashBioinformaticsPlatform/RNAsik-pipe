
/*
  Docs:

  Data comes in like this

  {"featureCounts" = "-t ID, -g gene",
   "STAR" = "--chimOutType WithinBAM, --chimSegmentMin 20",
   "starIndex" = "--sjdbGTFfile ~/ref-files/Homo_sapiens.GRCh38.82.gtf, --sjdbOverhang 99"}

  but given a tool name, comes out like this

  for featureCounts

  {"-t" = "ID",
   "-g" = "gene"}

  for STAR aligner

  {"--chimOutType" = "WithinBAM",
   "--chimSegmentMin" = "20"}

  for STAR aligner index

  {"--sjdbGTFfile" = "~/ref-files/Homo_sapiens.GRCh38.82.gtf",
   "--sjdbOverhang" = "99"}

  it gets turned into a string later as well e.g

  featureCounts

  -t ID -g gene

*/

string mkOptsStr(string{} m) {

    string[] opts

    for(string k : m.keys()) {

        opts.add(k)
        opts.add(m{k})
    }

    return opts.join(" ")
}

string{} getUsrOpts(string usrOpts) {

    string{} opts = config(usrOpts)

    //NOTE was thinking to make this more generic
    // and have like a nested hash type structure
    // for example {aliger: {"STAR", "hisat2"..} }
    // but I think this is too much for now
    //string[] allowedTypes = ["aligner",\
    //                         "counts",\
    //                         "multiqc",\
    //                         "mdups",\
    //                         "cov",\
    //                         "trim"]

    string[] allowedTools = ["star",\
                             "staridx",\
                             "featurecounts",\
                             "samtools sort",\
                             "picard markduplicates",\
                             "skewer",\
                             "multiqc"]

    for(string k : opts.keys()) {

        if(!allowedTools.has(k.toLower())) {
            error "Invalid tool name $k, please check your -extraOpts file"
        }
    }

    return opts
}

string getExtrOpts(string toolName, string{} currOpts, string{} usrOpts) {

    string{} finalOpts = currOpts

    if(usrOpts.hasKey(toolName)) {

        string tmpOptsStr = usrOpts{toolName}
        string[] toolsOpts = tmpOptsStr.split(",")

        for(string o : toolsOpts) {

            string[] opts = o.trim().split(" ")

            string k = opts.removeIdx(0)
            string v = opts.join(" ")

            finalOpts{k} = v

        }

    }

    return mkOptsStr(finalOpts)

}
