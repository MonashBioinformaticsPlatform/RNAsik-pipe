/*
STAR aligner utils
*/

string mkSTARidx(SikStarIdxConfig sikStarIdxConf, string fasta, string refDir, string starIdxDir, string[] idxDeps, string logFn) {

    string{} resources = sikStarIdxConf.idxRes
    string x = resources{"starExe"}
    int xCpu = resources{"idxCpu"}.parseInt()
    int xMem = resources{"idxMem"}.parseInt()

    string starCmdOpts = sikStarIdxConf.idxCmdOpts.join(" ")
    refDir = refDir + "/"

    //int chkGTF = starOpts.indexOf("--sjdbGTFfile")
    //if(chkGTF != -1) refFilesIn += gtfFile

    log("MSG: Beginng STAR indexing")

    task(idxDeps <- fasta, cpus := xCpu, mem := xMem, taskName := "Making STAR index") {
        sys $x --runThreadN $xCpu \
               --runMode genomeGenerate \
               --genomeDir $starIdxDir \
               --outFileNamePrefix $refDir \
               --genomeFastaFiles $fasta \
               $starCmdOpts > $logFn 2>&1
        //NOTE I think it's good idea to drop unzipped fasta file here, at this stage I don't think I'll needed
        //sys rm $fasta
        //NOTE turns out, deleting fasta here causes bunch of dependencies issues, so gonna keep it there untill figure out better solution
    }

    return starIdxDir
}

//TODO I think I want to make mapSTAR a Metadata class instead, however I think I now
// understand what Dave meant by object oriented "encoraging mutability"

//Metadata mapSTAR(SikStarAlignerConfig sikStarAlignerConf, Metadata sample, string genomeIdx) {
string mapSTAR(SikStarAlignerConfig sikStarAlignerConf, Metadata sample, string genomeIdx) {

    string{} resources = sikStarAlignerConf.alignerRes
    string x = resources{"starExe"}
    int xCpu = resources{"alignerCpu"}.parseInt()
    int xMem = resources{"alignerMem"}.parseInt()

    string starCmdOpts = sikStarAlignerConf.alignerCmdOpts.join(" ")

    string sampleName = sample.sampleName
    //string group =  sample.sampleGroup
    string bamOut = sample.bamOut
    string bamLog = sample.bamLog

    string[] fq1 = sample.fq1
    string[] fq2 = sample.fq2

    string fqs = [fq1.join(","), fq2.join(",")].join(" ")

    sampleName += "_" // STAR picularity

    string[] deps
    deps += fq1
    deps += fq2
    deps += genomeIdx

    string logMsg = "STAR aligning " + sampleName

    //TODO should make this information to come from metadata config file, default to empty string

    task([bamOut, bamLog] <- deps, cpus := xCpu, mem := xMem, taskName := logMsg) {

        sys $x --runThreadN $xCpu \
               --runMode alignReads \
               --genomeDir $genomeIdx \
               --outSAMattrRGline ID:001 CN:Unknown DS:RNAseq PL:ILLUMINA PM:ILLUMINA SM:$sampleName \
               --readFilesIn $fqs \
               --outFileNamePrefix $sampleName \
               $starCmdOpts > $bamLog 2>&1
    }

    //return sample
    return bamOut
}
