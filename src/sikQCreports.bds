#--------------------------------------------------
# Functions to get QC reports, RNAseQC and FASTQC
#--------------------------------------------------

include "sikHeader.bds"
include "sikMakeIndices.bds"
include "sikFunctions.bds"

# define directory name
string RNAseQCreport = "RNAseQC-report"

# make SampleIds.txt file for RNAseQC report
string getSampleIds(string[] markedBams){
    bool header = true
    string sampleIds
    
    for(string bamFile : markedBams){
        string[] getSampleIds = bamFile.split("_")
        string sampleId = getSampleIds[0].baseName()
        if(header){
            sampleIds += "Sample ID\tBam File\tNotes\n"
            header = false
        }
        sampleIds += "$sampleId\t$bamFile\tNA\n"
    }
    return sampleIds
}

string getRNAseQC(string sampleIdsFile, string[] markedBams, bool checkPair, string fastaRef){

    string additionalArgs
    if(!checkPair) additionalArgs = "-singleEnd"
    else additionalArgs = ""

    //task(RNAseQCreport <- [markedBams, sampleIdsFile, fastaFaiFile], mem = 10000000000, taskName := "Running RNAseQC report"){
    task(RNAseQCreport <- markedBams, taskName := "Running RNAseQC report"){
        # Changed this for cluster
        sys PATH=/usr/lib/jvm/java-7-openjdk-amd64/bin/:$PATH rna-seqc  -o $RNAseQCreport\
                                                                        -r $fastaRef \
                                                                        -s $sampleIdsFile\
                                                                        -t $gtfFile\
                                                                         $additionalArgs
    }
    return "all good"
}

string fastqcReport = "fastqcReport"
if((!fastqcReport.exists()) && (fastqc)) fastqcReport.mkdir()
string getFastqcReport(string fqDir){
    string fastqcFiles = fqDir.dirPath(extn).join(" ")
    task(fastqcReport <- fastqcFiles, taskName := "Running FASTQC") { 
        sys fastqc --outdir $fastqcReport \
                   --format fastq \
                   $fastqcFiles
    }
    return "all done"
}
