#--------------------------------------------------
# Functions to pre-process BAM files - picard
#--------------------------------------------------

string[] getMarkedBams(string{} cmdExe, string markedDupsBams, string[] bamFiles, string fastaRef, string fastaDictFile) {
    string[] markedBams
    // check if executable is there
    if(!cmdExe.hasKey("picardExe")) error "Can't get picard executable, check your config file $configFile"
    string picardExe = cmdExe{"picardExe"}

    for(string bamFile : bamFiles) {
        string[] sampleName = bamFile.baseName().split("_")
        string sortedName = markedDupsBams+"/"+sampleName[0]+"_sorted.bam"
        string mdupsName = sortedName.swapExt(".bam", "_mdups.bam")
        string metricsName = sortedName.swapExt(".bam", "_mdups.metrics")

        dep(prePro, [mdupsName, metricsName] <- [bamFile, fastaDictFile], cpus := 4, taskName := "picard sorting "+bamFile) {
            sys $picardExe SortSam TMP_DIR=tmp/ \
                                   VALIDATION_STRINGENCY=LENIENT \
                                   INPUT=$bamFile \
                                   OUTPUT=$sortedName \
                                   SORT_ORDER=coordinate
            sys $picardExe MarkDuplicates TMP_DIR=tmp/ \
                                          VALIDATION_STRINGENCY=LENIENT \
                                          CREATE_INDEX=true \
                                          INPUT=$sortedName \
                                          OUTPUT=$mdupsName \
                                          METRICS_FILE=$metricsName
            sys rm $sortedName
        }
        markedBams.add(mdupsName)
    }
    goal markedBams
    return markedBams
}
