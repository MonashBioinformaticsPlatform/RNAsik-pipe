#--------------------------------------------------
# Functions to pre-process BAM files - picard
#--------------------------------------------------

string[] getMarkedBams(string{} cmdExe, string markedDupsBams, string[] bamFiles, string fastaRef, string fastaDictFile) {
    string[] markedBams
    // check if executable is there
    if(!cmdExe.hasKey("picardExe")) error "Can't get picard executable, check your config file $configFile"
    string picardExe = cmdExe{"picardExe"}

    // 16 Gb RAM by default
    int picardMemory
    if(cmdExe.hasKey("preProMemory")) {
        picardMemory = cmdExe{"preProMemory"}.parseInt()
    } else {
        picardMemory = 17179869184
    }

    if(cmdExe.hasKey("preProMemory")) picardMemory := cmdExe{"preProMemory"}

    for(string bamFile : bamFiles) {
        string[] sampleName = bamFile.baseName().split("_")
        string sortedName = markedDupsBams+"/"+sampleName[0]+"_sorted.bam"
        string sortedIdx = markedDupsBams+"/"+sampleName[0]+"_sorted.bai"
        string reorderedName = sortedName.swapExt(".bam", "_reordered.bam")
        string mdupsName = reorderedName.swapExt(".bam", "_marked_dups.bam")
        string metricsName = reorderedName.swapExt(".bam", "_marked_dups.metrics")

        dep(prePro, [mdupsName, metricsName] <- [bamFile, fastaDictFile], cpus := 6, mem := picardMemory, taskName := "picard sorting "+bamFile) {
            sys $picardExe SortSam TMP_DIR=tmp/ \
                                   VALIDATION_STRINGENCY=LENIENT \
                                   CREATE_INDEX=true \
                                   INPUT=$bamFile \
                                   OUTPUT=$sortedName \
                                   SORT_ORDER=coordinate
            sys $picardExe ReorderSam TMP_DIR=tmp/ \
                                      VALIDATION_STRINGENCY=LENIENT \
                                      INPUT=$sortedName \
                                      OUTPUT=$reorderedName \
                                      REFERENCE=$fastaRef
            sys $picardExe MarkDuplicates TMP_DIR=tmp/ \
                                          VALIDATION_STRINGENCY=LENIENT \
                                          CREATE_INDEX=true \
                                          INPUT=$reorderedName \
                                          OUTPUT=$mdupsName \
                                          METRICS_FILE=$metricsName
            sys rm $sortedName $sortedIdx $reorderedName
        }
        markedBams.add(mdupsName)
    }
    goal markedBams
    return markedBams
}
