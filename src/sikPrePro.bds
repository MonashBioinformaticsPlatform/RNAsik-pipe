#--------------------------------------------------
# Functions to pre-process BAM files - picard
#--------------------------------------------------

#------------------------------
# Make directories as required
#------------------------------
string preqcBamFiles = "preqcBamFiles"
if((!preqcBamFiles.exists()) && (prePro)) preqcBamFiles.mkdir()
#------
# Body
#------

string getPrePro(string picardExe, string bamFile, string fastaRef, string fastaDictFile){

    string sortedName = preqcBamFiles+"/"+bamFile.baseName().swapExt("Aligned.out.bam", "sorted.bam")
    // try using 8 cpus to limit how picard processes can be run at a time
    // this should imporve I/O (input / output) performance
    task(sortedName <- bamFile, taskName := "picard sorting "+bamFile) {
        sys $picardExe SortSam TMP_DIR=tmp/ \
                               VALIDATION_STRINGENCY=LENIENT \
                               CREATE_INDEX=true \
                               INPUT=$bamFile \
                               OUTPUT=$sortedName \
                               SORT_ORDER=coordinate
    }

    string reorderedName = sortedName.swapExt(".bam", "_reordered.bam")
    task(reorderedName <- [sortedName, fastaDictFile], taskName := "picard reordering "+reorderedName) {
        sys $picardExe ReorderSam TMP_DIR=tmp/ \
                                  VALIDATION_STRINGENCY=LENIENT \
                                  INPUT=$sortedName \
                                  OUTPUT=$reorderedName \
                                  REFERENCE=$fastaRef
    }
    string mdupsName = reorderedName.swapExt(".bam", "_marked_dups.bam")
    string metricsName = reorderedName.swapExt(".bam", "_marked_dups.metrics")
    task(mdupsName <- reorderedName, taskName := "picard marking dups "+mdupsName) {
        sys $picardExe MarkDuplicates TMP_DIR=tmp/ \
                                      VALIDATION_STRINGENCY=LENIENT \
                                      CREATE_INDEX=true \
                                      INPUT=$reorderedName \
                                      OUTPUT=$mdupsName \
                                      METRICS_FILE=$metricsName
    }
    return mdupsName
}
