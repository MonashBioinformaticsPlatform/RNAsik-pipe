#--------------------------------------------------
# Functions to pre-process BAM files - picard
#--------------------------------------------------

string{} getMarkedBams(string{} cmdExe, string markedDupsBams, string{} bamsMap, string fastaRef, string fastaDictFile) {
    string[] markedBams
    string{} markedBamsMap
    // check if executable is there
    if(!cmdExe.hasKey("picardExe")) error "Can't get picard executable, check your config file $configFile"
    string picardExe = cmdExe{"picardExe"}

    for(string bamKey : bamsMap.keys()) {

        string bamFile = bamsMap{bamKey}
        string sortedName = markedDupsBams+"/"+bamKey+"_sorted.bam"
        string mdupsName = sortedName.swapExt(".bam", "_mdups.bam")
        string metricsName = sortedName.swapExt(".bam", "_mdups.metrics")

        dep(prePro, [mdupsName, metricsName] <- [bamFile, fastaDictFile], cpus := 4, taskName := "picard sorting "+bamFile) {
            sys $picardExe SortSam TMP_DIR=tmp/ \
                                   VALIDATION_STRINGENCY=LENIENT \
                                   INPUT=$bamFile \
                                   OUTPUT=$sortedName \
                                   SORT_ORDER=coordinate
            sys $picardExe MarkDuplicates TMP_DIR=tmp/ \
                                          VALIDATION_STRINGENCY=LENIENT \
                                          CREATE_INDEX=true \
                                          INPUT=$sortedName \
                                          OUTPUT=$mdupsName \
                                          METRICS_FILE=$metricsName
            sys rm $sortedName
        }
        markedBams.add(mdupsName)
        if(markedBamsMap.hasKey(bamKey)) {
            error "This should happened, please report this issue, sikPrePro.bds function"
        }
        markedBamsMap{bamKey} = mdupsName
       
    }
    goal markedBams
    return markedBamsMap
}
