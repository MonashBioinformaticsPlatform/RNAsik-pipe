#------------------------------
# Make directories as required
#------------------------------
string bamFiles = "bamFiles"
if((!bamFiles.exists()) && (align == "star")) bamFiles.mkdir()
#----------------------------------------------------------------------------------------------------
string mapSTAR(string starExe, string rootName, string genomeIndex, string SAindexFile, string[] listOfReads, string starOptions) {

    string rootBase = rootName.baseName()
    string preFix = bamFiles+"/"+rootBase+"_"
    
    string bamOut

    int checkUnsorted = starOptions.indexOf("Unsorted")
    int checkSorted = starOptions.indexOf("SortedByCoordinate")

    if(checkUnsorted != -1) bamOut = preFix+"Aligned.out.bam"
    if(checkSorted != -1) bamOut = preFix+"Aligned.sortedByCoord.out.bam"

    string reads = listOfReads.join(" ")
    //task(bamOut <- [genomeIndex, SAindexFile], cpu := 32, taskName := "STAR aligning "+rootBase) {
    task(bamOut <- [genomeIndex, SAindexFile], taskName := "STAR aligning "+rootBase) {
        sys $starExe --runThreadN $threads \
                     --genomeDir $genomeIndex \
                     --outSAMattrRGline ID:001 CN:Unknown DS:RNA-seq PL:ILLUMINA PM:MiSeq SM:$rootBase \
                     --readFilesIn $reads \
                     --outFileNamePrefix $preFix \
                     $starOptions
                 
    }
    wait
    # you can remove wait statement and reduce number of threads
    # however this will run all your fastq files in parallel
    # doing this I find a bit impractical on our server because of
    # limited RAM - only 128 Gb
    return bamOut
}
