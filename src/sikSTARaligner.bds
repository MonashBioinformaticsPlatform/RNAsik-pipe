#------------------------------
# STAR alignment function
#------------------------------

include "sikFqFiles.bds"

string[] mapSTAR(string{} cmdExe, string bamFiles, string{} fqMap, string starOpts, string genomeIdx, int threads, string logFile) {
    // double check
    //if(!fqMap) error "This error shouldn't occur. It should be caught earlier. Either way fqMap is empty $fqMap"
    // get STAR executable 
    if(!cmdExe.hasKey("starExe")) error "Can't get STAR executable, check your config file $configFile"
    string starExe = cmdExe{"starExe"}
    // BAMs
    string[] bamsList

    string[] idxFiles = ["chrLength.txt", "chrNameLength.txt", "chrName.txt", "chrStart.txt", "Genome", "genomeParameters.txt", "SA", "SAindex"]
    string[] genomeIdxFiles
    for(string idxFile : idxFiles) {
        string idxDep = genomeIdx + "/" + idxFile
        genomeIdxFiles.add(idxDep)
    }

    for(string rootName : fqMap.keys()) {
        string[] readsList = getReads(fqMap{rootName})
        paired = getPaired(readsList) 
        string[] deps = readsList
        deps += genomeIdxFiles

        string rootBase = rootName.baseName()
        string preFix = bamFiles+"/"+rootBase+"_"
        
        string bamOut
        int checkUnsorted = starOpts.indexOf("Unsorted")
        int checkSorted = starOpts.indexOf("SortedByCoordinate")
        if(checkUnsorted != -1) bamOut = preFix+"Aligned.out.bam"
        if(checkSorted != -1) bamOut = preFix+"Aligned.sortedByCoord.out.bam"

        string reads = readsList.join(" ")
        dep(!fqDir.isEmpty(), bamOut <- deps, cpus := threads, taskName := "STAR aligning "+rootBase) {
            sys $starExe --runThreadN $threads \
                         --runMode alignReads \
                         --genomeDir $genomeIdx \
                         --outSAMattrRGline ID:001 CN:Unknown DS:RNA-seq PL:ILLUMINA PM:MiSeq SM:$rootBase \
                         --readFilesIn $reads \
                         --outFileNamePrefix $preFix \
                         $starOpts
                     
        }
        //wait
        // you can remove wait statement and reduce number of threads
        // however this will run all your fastq files in parallel
        // doing this I find a bit impractical on our server because of
        // limited RAM - only 128 Gb
        bamsList.add(bamOut)
    }
    goal bamsList
    return bamsList
}
